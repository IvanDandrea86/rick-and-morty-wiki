{"version":3,"sources":["components/Search/Search.module.scss","logo.svg","components/Search/Search.js","components/Card/Card.js","components/Pagination/Pagination.js","components/Filter/FilterBTN.js","components/Filter/category/Gender.js","components/Filter/category/Species.js","components/Filter/category/Status.js","components/Filter/Filter.js","components/Navbar/Navbar.js","components/Filter/category/InputGroup.js","Pages/Episodes.js","Pages/Location.js","components/Card/CardDetails.js","App.js","reportWebVitals.js","index.js","components/Card/Card.module.scss"],"names":["module","exports","Search","setSearch","updatePageNumber","className","styles","search","onChange","e","target","value","placeholder","input","type","onClick","preventDefault","btn","Card","display","results","map","x","id","image","name","status","location","card","img","src","alt","content","badge","Pagination","pageNumber","info","useState","window","innerWidth","width","setWidth","updateDimensions","useEffect","addEventListener","removeEventListener","jsx","nextLabel","forcePage","previousLabel","previousClassName","nextClassName","activeClassName","marginPagesDisplayed","pageRangeDisplayed","pageCount","pages","onPageChange","data","selected","pageClassName","pageLinkClassName","FilterBTN","task","index","for","Gender","updateGender","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","items","Species","updateSpecies","item","Status","updateStatus","Filter","style","cursor","reload","Navbar","to","aria-label","class","InputGroup","changeID","total","Array","keys","Episodes","React","setResults","setInfo","air_date","episode","setID","api","a","fetch","then","res","json","Promise","all","characters","page","Location","dimension","number","setNumber","residents","CardDetails","useParams","fetchedData","updateFetchedData","origin","gender","species","Home","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,IAAM,sB,oLCDvC,I,yCC+BAC,EA5BA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBAK3B,OACE,uBACEC,UAAS,UAAKC,IAAOC,OAAZ,wFADX,UAGI,uBACNC,SAAU,SAACC,GACTL,EAAiB,GACjBD,EAAUM,EAAEC,OAAOC,QAErBC,YAAY,wBACZP,UAAWC,IAAOO,MAClBC,KAAK,SAEP,wBACEC,QAlBkB,SAACN,GACfA,EAAEO,kBAkBNX,UAAS,UAAKC,IAAOW,IAAZ,yBAFX,wB,gBCyCeC,EA3DF,SAAC,GAAiB,IACzBC,EADUC,EAAc,EAAdA,QAyDd,OArDED,EADEC,EACQA,EAAQC,KAAI,SAACC,GAAO,IACtBC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,MAAOC,EAA2BH,EAA3BG,KAAMC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,SAC/B,OACE,sBAEEtB,UAAU,qEAFZ,UAIE,sBACEA,UAAS,UAAKC,IAAOsB,KAAZ,8CADX,UAGE,qBAAKvB,UAAS,UAAKC,IAAOuB,IAAZ,cAA6BC,IAAKN,EAAOO,IAAI,KAC3D,sBAAK1B,UAAS,UAAKC,IAAO0B,SAA1B,UACE,qBAAK3B,UAAU,oBAAf,SAAoCoB,IACpC,sBAAKpB,UAAU,GAAf,UACE,qBAAKA,UAAU,iBAAf,2BACA,qBAAKA,UAAU,OAAf,SAAuBsB,EAASF,gBAKrB,SAAXC,EAEA,qBACErB,UAAS,UAAKC,IAAO2B,MAAZ,sCADX,SAGGP,IAGe,UAAXA,EAEP,qBACErB,UAAS,UAAKC,IAAO2B,MAAZ,uCADX,SAGGP,IAKH,qBACErB,UAAS,UAAKC,IAAO2B,MAAZ,yCADX,SAGGP,MArCJH,MA8CD,yBAGL,mCAAGJ,K,iBCJGe,EArDI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,KAAMhC,EAAuB,EAAvBA,iBAAuB,EAKnCiC,mBAASC,OAAOC,YALmB,mBAKtDC,EALsD,KAK/CC,EAL+C,KAMvDC,EAAmB,WACvBD,EAASH,OAAOC,aAOlB,OALAI,qBAAU,WAER,OADAL,OAAOM,iBAAiB,SAAUF,GAC3B,kBAAMJ,OAAOO,oBAAoB,SAAUH,MACjD,IAGD,qCACE,uBAAOI,KAAG,EAAV,0WAkBA,cAAC,IAAD,CACEzC,UAAU,+CACV0C,UAAU,OACVC,UAA0B,IAAfb,EAAmB,EAAIA,EAAa,EAC/Cc,cAAc,OACdC,kBAAkB,0BAClBC,cAAc,0BACdC,gBAAgB,SAChBC,qBAAsBb,EAAQ,IAAM,EAAI,EACxCc,mBAAoBd,EAAQ,IAAM,EAAI,EACtCe,UAAS,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAMoB,MACjBC,aA5CW,SAACC,GAChBtD,EAAiBsD,EAAKC,SAAW,IA4C7BC,cAAc,YACdC,kBAAkB,kBCdXC,EApCG,SAAC,GAAoD,IAAlDjD,EAAiD,EAAjDA,MAAOkD,EAA0C,EAA1CA,KAAM3D,EAAoC,EAApCA,iBAAkB4D,EAAkB,EAAlBA,MAAOvC,EAAW,EAAXA,KACzD,OACE,gCACE,uBAAOqB,KAAG,EAAV,kNAWA,sBAAKzC,UAAU,aAAf,UACE,uBACEA,UAAU,qBACVS,KAAK,QACLW,KAAMA,EACNF,GAAE,UAAKE,EAAL,YAAauC,KAEjB,wBACEjD,QAAS,SAACO,GACRyC,EAAKlD,GACLT,EAAiB,IAEnBC,UAAU,0BACV4D,IAAG,UAAKxC,EAAL,YAAauC,GANlB,UAQG,IACAnD,EAAO,cCcHqD,EAzCA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,aAAc/D,EAAuB,EAAvBA,iBAE9B,OACE,sBAAKC,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBkB,GAAG,eAApC,SACE,wBACElB,UAAU,6BACVS,KAAK,SACLsD,iBAAe,WACfC,iBAAe,iBACfC,gBAAc,QACdC,gBAAc,gBANhB,sBAWF,qBACEhD,GAAG,gBACHlB,UAAU,8BACVmE,kBAAgB,eAChBC,iBAAe,oBAJjB,SAME,qBAAKpE,UAAU,wCAAf,SArBQ,CAAC,SAAU,OAAQ,aAAc,WAsB9BgB,KAAI,SAACqD,EAAOV,GACnB,OACE,cAAC,EAAD,CACEvC,KAAK,SACLuC,MAAOA,EAEP5D,iBAAkBA,EAClB2D,KAAMI,EACNtD,MAAO6D,GAHFV,cCMNW,EAnCC,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,cAAexE,EAAuB,EAAvBA,iBAMlC,OACA,sBAAKC,UAAU,kBAAf,UACE,oBAAIA,UAAU,mBAAmBkB,GAAG,aAApC,SACE,wBACElB,UAAU,6BAA6BS,KAAK,SAC5CsD,iBAAe,WAAWC,iBAAe,eACzCC,gBAAc,QAAQC,gBAAc,cAHtC,yBAMF,qBACEhD,GAAG,cAAclB,UAAU,8BAC3BmE,kBAAgB,aAChBC,iBAAe,oBAHjB,SAKA,qBAAKpE,UAAU,wCAAf,SAnBgB,CACV,QAAS,QAAS,WAClB,gBAAiB,eAAgB,UACjC,SAAU,UAAU,QAAQ,aAAa,UAiBpCgB,KAAI,SAACwD,EAAMb,GAClB,OACE,cAAC,EAAD,CACEvC,KAAK,UAAUuC,MAAOA,EACtB5D,iBAAkBA,EAClB2D,KAAMa,EAAe/D,MAAOgE,GAFMb,cCQ7Bc,EAhCA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,aAAc3E,EAAuB,EAAvBA,iBAE9B,OACE,sBAAKC,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBkB,GAAG,aAApC,SACE,wBACElB,UAAU,mBAAmBS,KAAK,SAClCsD,iBAAe,WAAWC,iBAAe,eACzCC,gBAAc,OAAOC,gBAAc,cAHrC,wBAMF,qBACJhD,GAAG,cAAclB,UAAU,mCAC3BmE,kBAAgB,aAAaC,iBAAe,oBAFxC,SAIN,qBAAKpE,UAAU,wCAAf,SAde,CAAC,QAAS,OAAQ,WAevBgB,KAAI,SAACwD,EAAMb,GAAP,OACV,cAAC,EAAD,CAEEA,MAAOA,EACPvC,KAAK,SACLsC,KAAMgB,EACN3E,iBAAkBA,EAClBS,MAAOgE,GALFb,cC6BIgB,EA5CA,SAAC,GAMV,EALJ7C,WAKK,IAJL/B,EAII,EAJJA,iBACA2E,EAGI,EAHJA,aACAZ,EAEI,EAFJA,aACAS,EACI,EADJA,cASA,OACE,sBAAKvE,UAAU,uBAAf,UACE,qBAAKA,UAAU,gCAAf,qBACA,sBACE4E,MAAO,CAAEC,OAAQ,WACjBnE,QAZM,WACVgE,EAAa,IACbZ,EAAa,IACbS,EAAc,IACdxE,EAAiB,GACjBkC,OAAOX,SAASwD,QAAO,IAQnB9E,UAAU,0DAHZ,UAKG,IALH,gBAMgB,OAEhB,sBAAKA,UAAU,YAAYkB,GAAG,mBAA9B,UAEE,cAAC,EAAD,CACEnB,iBAAkBA,EAClB2E,aAAcA,IAEf,cAAC,EAAD,CACC3E,iBAAkBA,EAClBwE,cAAeA,IAEhB,cAAC,EAAD,CACCxE,iBAAkBA,EAClB+D,aAAcA,W,OCcTiB,G,MApDA,WACb,OACE,qBAAK/E,UAAU,qDAAf,SACE,sBAAKA,UAAU,YAAf,UACE,eAAC,IAAD,CAAMgF,GAAG,IAAIhF,UAAU,2BAAvB,0BACe,sBAAMA,UAAU,eAAhB,qBAEf,uBAAOyC,KAAG,EAAV,gNAQA,yBACEzC,UAAU,0BACVS,KAAK,SACLsD,iBAAe,WACfC,iBAAe,sBACfE,gBAAc,qBACdD,gBAAc,QACdgB,aAAW,oBAPb,UASE,sBAAMC,MAAM,+BACZ,sBAAMA,MAAM,oCAEd,qBACElF,UAAU,+CACVkB,GAAG,qBAFL,SAIE,sBAAKlB,UAAU,kBAAf,UACE,cAAC,IAAD,CAASgF,GAAG,uBAAuBhF,UAAU,WAA7C,wBAGA,cAAC,IAAD,CAASgF,GAAG,YAAYhF,UAAU,WAAlC,qBAGA,cAAC,IAAD,CACE+C,gBAAgB,SAChB/C,UAAU,WACVgF,GAAG,YAHL,kC,QCnBGG,EArBI,SAAC,GAA+B,IAA7B/D,EAA4B,EAA5BA,KAAMgE,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,qBAAKrF,UAAU,mBAAf,SACE,yBACEG,SAAU,SAACC,GAAD,OAAOgF,EAAShF,EAAEC,OAAOC,QACnCN,UAAU,cACVkB,GAAIE,EAHN,UAKE,wBAAQd,MAAM,IAAd,uBACC,YAAIgF,MAAMD,GAAOE,QAAQvE,KAAI,SAACC,EAAG0C,GAChC,OACE,yBAAQrD,MAAOW,EAAI,EAAnB,UACGG,EADH,MACYH,EAAI,cCsCbuE,EAhDE,WAAO,IAAD,EACOC,IAAMzD,SAAS,IADtB,mBAChBjB,EADgB,KACP2E,EADO,OAEC1D,mBAAS,IAFV,mBAEhBD,EAFgB,KAEV4D,EAFU,KAGfC,EAA4B7D,EAA5B6D,SAAmBxE,GAASW,EAAlB8D,QAAkB9D,EAATX,MAHJ,EAIHY,mBAAS,GAJN,mBAIhBd,EAJgB,KAIZ4E,EAJY,KAMjBC,EAAG,kDAA8C7E,GAgBrD,OAdAoB,qBAAU,WACR,sBAAC,mBAAA0D,EAAA,SAAAA,EAAA,sEACkBC,MAAMF,GAAKG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAD/C,cACK/C,EADL,OAECsC,EAAQtC,GAFT,SAIegD,QAAQC,IACpBjD,EAAKkD,WAAWvF,KAAI,SAACC,GACnB,OAAOgF,MAAMhF,GAAGiF,MAAK,SAACC,GAAD,OAASA,EAAIC,cANvC,OAIKJ,EAJL,OASCN,EAAWM,GATZ,0CAAD,KAWC,CAACD,IAGF,sBAAK/F,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAIA,UAAU,mBAAd,2BACiB,IACf,sBAAMA,UAAU,eAAhB,SAAyC,KAAToB,EAAc,UAAYA,OAE5D,qBAAIpB,UAAU,cAAd,uBAC0B,KAAb4F,EAAkB,UAAYA,QAG7C,sBAAK5F,UAAU,MAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,mBAAd,0BACA,cAAC,EAAD,CAAYoB,KAAK,UAAUgE,SAAUU,EAAOT,MAAO,QAErD,qBAAKrF,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAMwG,KAAK,aAAazF,QAASA,eCY9B0F,EApDE,WAAO,IAAD,EACOhB,IAAMzD,SAAS,IADtB,mBAChBjB,EADgB,KACP2E,EADO,OAEC1D,mBAAS,IAFV,mBAEhBD,EAFgB,KAEV4D,EAFU,KAGfe,EAA0B3E,EAA1B2E,UAAWjG,EAAesB,EAAftB,KAAMW,EAASW,EAATX,KAHF,EAIKY,mBAAS,GAJd,mBAIhB2E,EAJgB,KAIRC,EAJQ,KAMjBb,EAAG,mDAA+CY,GAgBtD,OAdArE,qBAAU,WACR,sBAAC,mBAAA0D,EAAA,SAAAA,EAAA,sEACkBC,MAAMF,GAAKG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAD/C,cACK/C,EADL,OAECsC,EAAQtC,GAFT,SAIegD,QAAQC,IACpBjD,EAAKwD,UAAU7F,KAAI,SAACC,GAClB,OAAOgF,MAAMhF,GAAGiF,MAAK,SAACC,GAAD,OAASA,EAAIC,cANvC,OAIKJ,EAJL,OASCN,EAAWM,GATZ,0CAAD,KAWC,CAACD,IAGF,sBAAK/F,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAIA,UAAU,mBAAd,uBAEE,uBAAMA,UAAU,eAAhB,UACG,IACS,KAAToB,EAAc,UAAYA,QAG/B,qBAAIpB,UAAU,cAAd,wBAC4B,KAAd0G,EAAmB,UAAYA,KAE7C,qBAAI1G,UAAU,cAAd,mBAA4C,KAATS,EAAc,UAAYA,QAE/D,sBAAKT,UAAU,MAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,mBAAd,2BACA,cAAC,EAAD,CAAYoB,KAAK,WAAWgE,SAAUwB,EAAWvB,MAAO,SAE1D,qBAAKrF,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAMwG,KAAK,aAAazF,QAASA,e,OCQ9B+F,EArDK,WAAO,IACnB5F,EAAO6F,cAAP7F,GADkB,EAGec,mBAAS,IAHxB,mBAGnBgF,EAHmB,KAGNC,EAHM,KAIlB7F,EAA2D4F,EAA3D5F,KAAME,EAAqD0F,EAArD1F,SAAU4F,EAA2CF,EAA3CE,OAAQC,EAAmCH,EAAnCG,OAAQhG,EAA2B6F,EAA3B7F,MAAOE,EAAoB2F,EAApB3F,OAAQ+F,EAAYJ,EAAZI,QAEjDrB,EAAG,oDAAgD7E,GASvD,OAPAoB,qBAAU,WACR,sBAAC,4BAAA0D,EAAA,sEACkBC,MAAMF,GAAKG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAD/C,OACK/C,EADL,OAEC4D,EAAkB5D,GAFnB,0CAAD,KAIC,CAAC0C,IAGF,qBAAK/F,UAAU,+CAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BoB,IAE7B,qBAAKpB,UAAU,YAAYyB,IAAKN,EAAOO,IAAI,KAE1B,SAAXL,EACK,qBAAKrB,UAAU,uBAAf,SAAuCqB,IAC1B,UAAXA,EACF,qBAAKrB,UAAU,yBAAf,SAAyCqB,IAEzC,qBAAKrB,UAAU,0BAAf,SAA0CqB,IAGrD,sBAAKrB,UAAU,UAAf,UACE,sBAAKA,UAAU,GAAf,UACE,sBAAMA,UAAU,UAAhB,uBACCmH,KAEH,sBAAKnH,UAAU,GAAf,UACE,sBAAMA,UAAU,UAAhB,wBADF,OAEGsB,QAFH,IAEGA,OAFH,EAEGA,EAAUF,QAEb,sBAAKpB,UAAU,GAAf,UACE,sBAAMA,UAAU,UAAhB,sBADF,OAEGkH,QAFH,IAEGA,OAFH,EAEGA,EAAQ9F,QAEX,sBAAKpB,UAAU,GAAf,UACE,sBAAMA,UAAU,UAAhB,uBACCoH,cCbb,IAAMC,EAAO,WAAO,IAAD,EACsBrF,mBAAS,IAD/B,mBACZgF,EADY,KACCC,EADD,KAEXlF,EAAkBiF,EAAlBjF,KAAMhB,EAAYiG,EAAZjG,QAFK,EAGoBiB,mBAAS,GAH7B,mBAGZF,EAHY,KAGA/B,EAHA,OAISiC,mBAAS,IAJlB,mBAIZ9B,EAJY,KAIJJ,EAJI,OAKYkC,mBAAS,IALrB,mBAKZX,EALY,KAKJqD,EALI,OAMY1C,mBAAS,IANrB,mBAMZmF,EANY,KAMJrD,EANI,OAOc9B,mBAAS,IAPvB,mBAOZoF,EAPY,KAOH7C,EAPG,KASbwB,EAAG,0DAAsDjE,EAAtD,iBAAyE5B,EAAzE,mBAA0FmB,EAA1F,mBAA2G8F,EAA3G,oBAA6HC,GASpI,OAPA9E,qBAAU,WACR,sBAAC,4BAAA0D,EAAA,sEACkBC,MAAMF,GAAKG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAD/C,OACK/C,EADL,OAEC4D,EAAkB5D,GAFnB,0CAAD,KAIC,CAAC0C,IAGF,sBAAK/F,UAAU,MAAf,UACE,oBAAIA,UAAU,mBAAd,wBACA,cAAC,EAAD,CAAQF,UAAWA,EAAWC,iBAAkBA,IAChD,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CACE8B,WAAYA,EACZT,OAAQA,EACRqD,aAAcA,EACdZ,aAAcA,EACdS,cAAeA,EACfxE,iBAAkBA,IAEpB,qBAAKC,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAMe,QAASA,aAKvB,cAAC,EAAD,CACEgB,KAAMA,EACND,WAAYA,EACZ/B,iBAAkBA,QAMXuH,EApEf,WACE,OACE,eAAC,IAAD,WACE,qBAAKtH,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuH,KAAK,uBAAuBC,QAAS,cAAC,EAAD,MAC5C,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,EAAD,MAE5B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MAErC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,aCjB9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfA9H,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,IAAM,kBAAkB,MAAQ,uB","file":"static/js/main.8455b3ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__3iTQH\",\"btn\":\"Search_btn__VNvBO\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport styles from \"./Search.module.scss\";\n\nconst Search = ({ setSearch, updatePageNumber }) => {\n    let searchBtn = (e) => {\n      e.preventDefault();\n    };\n  \n  return (\n    <form\n      className={`${styles.search} d-flex flex-sm-row flex-column align-items-center justify-content-center gap-4 mb-5`}\n    >\n        <input\n  onChange={(e) => {\n    updatePageNumber(1);\n    setSearch(e.target.value);\n  }}\n  placeholder=\"Search for characters\"\n  className={styles.input}\n  type=\"text\"\n/>\n<button\n  onClick={searchBtn}\n  className={`${styles.btn} btn btn-primary fs-5`}\n>\n  Search\n</button>\n    </form>\n  );\n};\n\nexport default Search;","import React from \"react\";\nimport styles from \"./Card.module.scss\";\n\nconst Card = ({ results }) => {\n  let display;\n\n  if (results) {\n    display = results.map((x) => {\n      let { id, image, name, status, location } = x;\n      return (\n        <div\n          key={id}\n          className=\"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\n        >\n          <div\n            className={`${styles.card} d-flex flex-column justify-content-center`}\n          >\n            <img className={`${styles.img} img-fluid`} src={image} alt=\"\" />\n            <div className={`${styles.content}`}>\n              <div className=\"fs-5 fw-bold mb-4\">{name}</div>\n              <div className=\"\">\n                <div className=\"fs-6 fw-normal\">Last Location</div>\n                <div className=\"fs-5\">{location.name}</div>\n              </div>\n            </div>\n          </div>\n          {(() => {\n            if (status === \"Dead\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-danger`}\n                >\n                  {status}\n                </div>\n              );\n            } else if (status === \"Alive\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-success`}\n                >\n                  {status}\n                </div>\n              );\n            } else {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-secondary`}\n                >\n                  {status}\n                </div>\n              );\n            }\n          })()}\n        </div>\n      );\n    });\n  } else {\n    display = \"No Characters Found :/\";\n  }\n\n  return <>{display}</>;\n};\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Pagination = ({ pageNumber, info, updatePageNumber }) => {\n  let pageChange = (data) => {\n    updatePageNumber(data.selected + 1);\n  };\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const updateDimensions = () => {\n    setWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n\n  return (\n    <>\n      <style jsx>\n        {`\n          @media (max-width: 768px) {\n            .pagination {\n              font-size: 12px;\n            }\n            .next,\n            .prev {\n              display: none;\n            }\n          }\n          @media (max-width: 768px) {\n            .pagination {\n              font-size: 14px;\n            }\n          }\n        `}\n      </style>\n      <ReactPaginate\n        className=\"pagination justify-content-center my-4 gap-4\"\n        nextLabel=\"Next\"\n        forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n        previousLabel=\"Prev\"\n        previousClassName=\"btn btn-light fs-5 prev\"\n        nextClassName=\"btn btn-light fs-5 next\"\n        activeClassName=\"active\"\n        marginPagesDisplayed={width < 576 ? 1 : 2}\n        pageRangeDisplayed={width < 576 ? 1 : 2}\n        pageCount={info?.pages}\n        onPageChange={pageChange}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n      />\n    </>\n  );\n};\n\nexport default Pagination;","const FilterBTN = ({ input, task, updatePageNumber, index, name }) => {\n  return (\n    <div>\n      <style jsx>\n        {`\n          .x:checked + label {\n            background-color: #0b5ed7;\n            color: white;\n          }\n          input[type=\"radio\"] {\n            display: none;\n          }\n        `}\n      </style>\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input x\"\n          type=\"radio\"\n          name={name}\n          id={`${name}-${index}`}\n        />\n        <label\n          onClick={(x) => {\n            task(input);\n            updatePageNumber(1);\n          }}\n          className=\"btn btn-outline-primary\"\n          for={`${name}-${index}`}\n        >\n          {\" \"}\n          {input}{\" \"}\n        </label>\n      </div>\n    </div>\n  );\n};\nexport default FilterBTN;\n","import React from \"react\";\nimport FilterBTN from \"../FilterBTN\";\n\nconst Gender = ({ updateGender, updatePageNumber }) => {\n  let genders = [\"female\", \"male\", \"genderless\", \"unknown\"];\n  return (\n    <div className=\"accordion-item\">\n      <h2 className=\"accordion-header\" id=\"headingThree\">\n        <button\n          className=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseThree\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseThree\"\n        >\n          Gender\n        </button>\n      </h2>\n      <div\n        id=\"collapseThree\"\n        className=\"accordion-collapse collapse\"\n        aria-labelledby=\"headingThree\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\n          {genders.map((items, index) => {\n            return (\n              <FilterBTN\n                name=\"gender\"\n                index={index}\n                key={index}\n                updatePageNumber={updatePageNumber}\n                task={updateGender}\n                input={items}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Gender;\n","import FilterBTN from \"../FilterBTN\";\n\nconst Species = ({ updateSpecies, updatePageNumber }) => {\n    let species = [\n        \"Human\", \"Alien\", \"Humanoid\",\n        \"Poopybutthole\", \"Mythological\", \"Unknown\",\n        \"Animal\", \"Disease\",\"Robot\",\"Cronenberg\",\"Planet\",\n      ];\nreturn (\n<div className=\"accordion-item \">\n  <h2 className=\"accordion-header\" id=\"headingTwo\">\n    <button\n      className=\"accordion-button collapsed\" type=\"button\"\n      data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\"\n      aria-expanded=\"false\" aria-controls=\"collapseTwo\"\n    > Species </button>\n  </h2>\n  <div\n    id=\"collapseTwo\" className=\"accordion-collapse collapse\"\n    aria-labelledby=\"headingTwo\"\n    data-bs-parent=\"#accordionExample\"\n  >\n  <div className=\"accordion-body d-flex flex-wrap gap-3\">\n    {species.map((item, index) => {\n      return (\n        <FilterBTN\n          name=\"species\" index={index} key={index}\n          updatePageNumber={updatePageNumber}\n          task={updateSpecies} input={item}\n        />\n      );\n    })}\n  </div>\n</div>\n</div>\n)}\n\nexport default Species;","import FilterBTN from \"../FilterBTN\";\n\nconst Status = ({ updateStatus, updatePageNumber }) => {\n  let status = [\"Alive\", \"Dead\", \"Unknown\"];\n  return (\n    <div className=\"accordion-item\">\n      <h2 className=\"accordion-header\" id=\"headingOne\">\n        <button\n          className=\"accordion-button\" type=\"button\"\n          data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\"\n          aria-expanded=\"true\" aria-controls=\"collapseOne\"\n        > Status </button>\n      </h2>\n      <div\n  id=\"collapseOne\" className=\"accordion-collapse collapse show\"\n  aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\"\n>\n<div className=\"accordion-body d-flex flex-wrap gap-3\">\n  {status.map((item, index) => (\n    <FilterBTN\n      key={index}\n      index={index}\n      name=\"status\"\n      task={updateStatus}\n      updatePageNumber={updatePageNumber}\n      input={item}\n    />\n  ))}\n</div>\n</div>\n    </div>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport Gender from \"./category/Gender\";\nimport Species from \"./category/Species\";\nimport Status from \"./category/Status\";\n\nconst Filter = ({\n  pageNumber,\n  updatePageNumber,\n  updateStatus,\n  updateGender,\n  updateSpecies,\n}) => {\n  let clear = () => {\n    updateStatus(\"\");\n    updateGender(\"\");\n    updateSpecies(\"\");\n    updatePageNumber(1);\n    window.location.reload(false);\n  };\n  return (\n    <div className=\"col-lg-3 col-12 mb-5\">\n      <div className=\"text-center fw-bold fs-4 mb-2\">Filters</div>\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={clear}\n        className=\"text-primary text-decoration-underline text-center mb-3\"\n      >\n        {\" \"}\n        Clear Filters{\" \"}\n      </div>\n      <div className=\"accordion\" id=\"accordionExample\">\n        {/* Category components will be placed here */}\n        <Status\n          updatePageNumber={updatePageNumber}\n          updateStatus={updateStatus}\n        />\n         <Species\n          updatePageNumber={updatePageNumber}\n          updateSpecies={updateSpecies}\n        />\n         <Gender\n          updatePageNumber={updatePageNumber}\n          updateGender={updateGender}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport \"../../App.scss\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand fs-3 ubuntu\">\n          Rick & Morty <span className=\"text-primary\">WiKi</span>\n        </Link>\n        <style jsx>{`\n          button[aria-expanded=\"false\"] > .close {\n            display: none;\n          }\n          button[aria-expanded=\"true\"] > .open {\n            display: none;\n          }\n        `}</style>\n        <button\n          className=\"navbar-toggler border-0\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"fas fa-bars open text-dark\"></span>\n          <span class=\"fas fa-times close text-dark\"></span>\n        </button>\n        <div\n          className=\"collapse navbar-collapse justify-content-end\"\n          id=\"navbarNavAltMarkup\"\n        >\n          <div className=\"navbar-nav fs-5\">\n            <NavLink to=\"/rick-and-morty-wiki\" className=\"nav-link\">\n              Characters\n            </NavLink>\n            <NavLink to=\"/episodes\" className=\"nav-link\">\n              Episode\n            </NavLink>\n            <NavLink\n              activeClassName=\"active\"\n              className=\"nav-link\"\n              to=\"/location\"\n            >\n              Location\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React from \"react\";\n\nconst InputGroup = ({ name, changeID, total }) => {\n  return (\n    <div className=\"input-group mb-3\">\n      <select\n        onChange={(e) => changeID(e.target.value)}\n        className=\"form-select\"\n        id={name}\n      >\n        <option value=\"1\">Choose...</option>\n        {[...Array(total).keys()].map((x, index) => {\n          return (\n            <option value={x + 1}>\n              {name} - {x + 1}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default InputGroup;","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Episodes = () => {\n  let [results, setResults] = React.useState([]);\n  let [info, setInfo] = useState([]);\n  let { air_date, episode, name } = info;\n  let [id, setID] = useState(1);\n\n  let api = `https://rickandmortyapi.com/api/episode/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      setInfo(data);\n\n      let a = await Promise.all(\n        data.characters.map((x) => {\n          return fetch(x).then((res) => res.json());\n        })\n      );\n      setResults(a);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mb-3\">\n        <h1 className=\"text-center mb-3\">\n          Episode name :{\" \"}\n          <span className=\"text-primary\">{name === \"\" ? \"Unknown\" : name}</span>\n        </h1>\n        <h5 className=\"text-center\">\n          Air Date: {air_date === \"\" ? \"Unknown\" : air_date}\n        </h5>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-12 mb-4\">\n          <h4 className=\"text-center mb-4\">Pick Episode</h4>\n          <InputGroup name=\"Episode\" changeID={setID} total={51} />\n        </div>\n        <div className=\"col-lg-8 col-12\">\n          <div className=\"row\">\n            <Card page=\"/episodes/\" results={results} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Episodes;","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Location = () => {\n  let [results, setResults] = React.useState([]);\n  let [info, setInfo] = useState([]);\n  let { dimension, type, name } = info;\n  let [number, setNumber] = useState(1);\n\n  let api = `https://rickandmortyapi.com/api/location/${number}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      setInfo(data);\n\n      let a = await Promise.all(\n        data.residents.map((x) => {\n          return fetch(x).then((res) => res.json());\n        })\n      );\n      setResults(a);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mb-3\">\n        <h1 className=\"text-center mb-3\">\n          Location :\n          <span className=\"text-primary\">\n            {\" \"}\n            {name === \"\" ? \"Unknown\" : name}\n          </span>\n        </h1>\n        <h5 className=\"text-center\">\n          Dimension: {dimension === \"\" ? \"Unknown\" : dimension}\n        </h5>\n        <h6 className=\"text-center\">Type: {type === \"\" ? \"Unknown\" : type}</h6>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-12 mb-4\">\n          <h4 className=\"text-center mb-4\">Pick Location</h4>\n          <InputGroup name=\"Location\" changeID={setNumber} total={126} />\n        </div>\n        <div className=\"col-lg-8 col-12\">\n          <div className=\"row\">\n            <Card page=\"/location/\" results={results} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Location;","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst CardDetails = () => {\n  let { id } = useParams();\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { name, location, origin, gender, image, status, species } = fetchedData;\n\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container d-flex justify-content-center mb-5\">\n      <div className=\"d-flex flex-column gap-3\">\n        <h1 className=\"text-center\">{name}</h1>\n\n        <img className=\"img-fluid\" src={image} alt=\"\" />\n        {(() => {\n          if (status === \"Dead\") {\n            return <div className=\"badge bg-danger fs-5\">{status}</div>;\n          } else if (status === \"Alive\") {\n            return <div className=\" badge bg-success fs-5\">{status}</div>;\n          } else {\n            return <div className=\"badge bg-secondary fs-5\">{status}</div>;\n          }\n        })()}\n        <div className=\"content\">\n          <div className=\"\">\n            <span className=\"fw-bold\">Gender : </span>\n            {gender}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Location: </span>\n            {location?.name}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Origin: </span>\n            {origin?.name}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Species: </span>\n            {species}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardDetails;","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport Search from \"./components/Search/Search\";\nimport Card from \"./components/Card/Card\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport Filter from \"./components/Filter/Filter\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Episodes from \"./Pages/Episodes\";\nimport Location from \"./Pages/Location\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport CardDetails from \"./components/Card/CardDetails\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n      </div>\n      <Routes>\n        <Route path=\"/rick-and-morty-wiki\" element={<Home />} />\n        <Route path=\"/:id\" element={<CardDetails />} />\n\n        <Route path=\"/episodes\" element={<Episodes />} />\n        <Route path=\"/episodes/:id\" element={<CardDetails />} />\n\n        <Route path=\"/location\" element={<Location />} />\n        <Route path=\"/location/:id\" element={<CardDetails />} />\n      </Routes>\n    </Router>\n  );\n}\n\nconst Home = () => {\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { info, results } = fetchedData;\n  let [pageNumber, updatePageNumber] = useState(1);\n  let [search, setSearch] = useState(\"\");\n  let [status, updateStatus] = useState(\"\");\n  let [gender, updateGender] = useState(\"\");\n  let [species, updateSpecies] = useState(\"\");\n\n  let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-center mb-3\">Characters</h1>\n      <Search setSearch={setSearch} updatePageNumber={updatePageNumber} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <Filter\n            pageNumber={pageNumber}\n            status={status}\n            updateStatus={updateStatus}\n            updateGender={updateGender}\n            updateSpecies={updateSpecies}\n            updatePageNumber={updatePageNumber}\n          />\n          <div className=\"col-lg-8 col-12\">\n            <div className=\"row\">\n              <Card results={results} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagination\n        info={info}\n        pageNumber={pageNumber}\n        updatePageNumber={updatePageNumber}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35wN0\",\"content\":\"Card_content__1AEDp\",\"img\":\"Card_img__1qgJC\",\"badge\":\"Card_badge__21uzr\"};"],"sourceRoot":""}